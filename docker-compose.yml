version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: matrus-postgres
    environment:
      POSTGRES_DB: matrus
      POSTGRES_USER: matrus
      POSTGRES_PASSWORD: matrus_pass
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U matrus -d matrus"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: matrus-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: matrus-api
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://matrus:matrus_pass@postgres:5432/matrus
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    ports:
      - '4000:4000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/api:/usr/src/app
      - /usr/src/app/node_modules
    command: pnpm dev

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: matrus-web
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_WS_URL: ws://localhost:4000
    ports:
      - '3000:3000'
    depends_on:
      - api
    volumes:
      - ./apps/web:/usr/src/app
      - /usr/src/app/node_modules
    command: pnpm dev

  bot:
    build:
      context: .
      dockerfile: ./apps/bot/Dockerfile
    container_name: matrus-bot
    environment:
      NODE_ENV: development
      API_URL: http://api:4000
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      WEBHOOK_URL: ${WEBHOOK_URL}
    depends_on:
      - api
    volumes:
      - ./apps/bot:/usr/src/app
      - /usr/src/app/node_modules
    command: pnpm dev

  nginx:
    image: nginx:alpine
    container_name: matrus-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./infra/docker/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/docker/ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
    profiles:
      - production

volumes:
  postgres_data:
  redis_data: